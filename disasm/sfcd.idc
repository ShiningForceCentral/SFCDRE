//
// +-------------------------------------------------------------------------+
// |     This file is generated by The Interactive Disassembler (IDA)        |
// |     Copyright (c) 2007 by DataRescue sa/nv, <ida@datarescue.com>        |
// | Licensed to: Mach EDV Dienstleistungen, Jan Mach, 1 user, adv, 11/2007  |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void) {
        GenInfo();              // various settings
        Segments();             // segmentation
        Enums();                // enumerations
        Structures();           // structure types
        Bytes();                // individual bytes (code,data)
        Functions();            // function definitions
        SegRegs();              // segment register values
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("68000");
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	SetSelector(0X1,0X0);
	;
	SegCreate(0X0,0X394F000,0X0,1,1,2);
	SegRename(0X0,"ROM");
	SegClass (0X0,"CODE");
	SetSegmentType(0X0,2);
	LowVoids(0x20);
	HighVoids(0x394F000);
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0X0,	0,	"; File Name   : E:\\SEGADEV\\SFCD\\Shining force CD (U)\\SFCD.iso");
	ExtLinA		(0X0,	1,	"; Format      : Binary file");
	ExtLinA		(0X0,	2,	"; Base Address: 0000h Range: 0000h - 394F000h Loaded length: 394F000h");
	MakeStr		(0X0,	0X10);
	MakeName	(0X0,	"aSegadiscsystem");
	MakeStr		(0X10,	0X1B);
	MakeName	(0X10,	"aSfcd");
	MakeByte	(0X1B);
	MakeByte	(0X1C);
	MakeByte	(0X1D);
	MakeByte	(0X1E);
	MakeByte	(0X1F);
	MakeStr		(0X20,	0X2B);
	MakeName	(0X20,	"aSegaos");
	MakeByte	(0X2B);
	MakeByte	(0X2C);
	MakeByte	(0X2D);
	MakeByte	(0X2E);
	MakeByte	(0X2F);
	MakeRptCmt	(0X30,	"main 68000 initial program cd offset");
	MakeDword	(x=0X30);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeRptCmt	(0X34,	"main 68000 initial program cd size");
	MakeDword	(x=0X34);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeRptCmt	(0X38,	"main 68000 initial program entry offset");
	MakeDword	(0X38);
	MakeRptCmt	(0X3C,	"main 68000 initial program Work RAM size");
	MakeDword	(0X3C);
	MakeRptCmt	(0X40,	"sub 68000 initial program cd offset");
	MakeDword	(x=0X40);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeRptCmt	(0X44,	"sub 68000 initial program cd size");
	MakeDword	(x=0X44);
	OpOff		(x,	0,	0X0);
	OpOff		(x,	128,	0X0);
	MakeRptCmt	(0X48,	"sub 68000 initial program entry offset");
	MakeDword	(0X48);
	MakeRptCmt	(0X4C,	"sub 68000 initial program Work RAM size");
	MakeDword	(0X4C);
	MakeStr		(0X50,	0X60);
	MakeName	(0X50,	"a03231995");
	MakeStr		(0X60,	0X70);
	MakeStr		(0X70,	0X80);
	MakeStr		(0X80,	0X90);
	MakeStr		(0X90,	0XA0);
	MakeStr		(0XA0,	0XB0);
	MakeStr		(0XB0,	0XC0);
	MakeStr		(0XC0,	0XD0);
	MakeStr		(0XD0,	0XE0);
	MakeStr		(0XE0,	0XF0);
	MakeStr		(0XF0,	0X100);
	MakeStr		(0X100,	0X110);
	MakeName	(0X100,	"aSegaMegaDrive");
	MakeStr		(0X110,	0X118);
	MakeName	(0X110,	"aCSega");
	MakeStr		(0X118,	0X120);
	MakeName	(0X118,	"a1995_feb");
	MakeStr		(0X120,	0X130);
	MakeName	(0X120,	"aShiningForceCd");
	MakeStr		(0X130,	0X140);
	MakeStr		(0X140,	0X150);
	MakeStr		(0X150,	0X160);
	MakeName	(0X150,	"aShiningForce_0");
	MakeStr		(0X160,	0X170);
	MakeStr		(0X170,	0X180);
	MakeStr		(0X180,	0X190);
	MakeName	(0X180,	"aGmMk465600");
	MakeStr		(0X190,	0X1A0);
	MakeName	(0X190,	"aJ");
	MakeStr		(0X1A0,	0X1B0);
	MakeStr		(0X1B0,	0X1C0);
	MakeStr		(0X1C0,	0X1D0);
	MakeStr		(0X1D0,	0X1E0);
	MakeStr		(0X1E0,	0X1F0);
	MakeStr		(0X1F0,	0X200);
	MakeName	(0X1F0,	"aE");
	MakeStr		(0X669,	0X685);
	MakeName	(0X669,	"aProducedByOrUnde");
	MakeStr		(0X687,	0X6A3);
	MakeName	(0X687,	"aFromSegaEnterpri");
	MakeByte	(0X800);
	MakeArray	(0X800,	0X800);
	MakeName	(0X800,	"MAIN_CPU_INIT_PRG");
	MakeByte	(0X1000);
	MakeArray	(0X1000,	0X7000);
	MakeName	(0X1000,	"SUB_CPU_INIT_PRG");
	MakeByte	(0X8000);
	MakeArray	(0X8000,	0X3800);
	MakeByte	(0XB800);
	MakeArray	(0XB800,	0X465000);
	MakeByte	(0X470800);
	MakeArray	(0X470800,	0X20);
	MakeArray	(0X470820,	0X7E0);
	MakeRptCmt	(0X471000,	"ABS.TXT");
	MakeByte	(0X471000);
	MakeArray	(0X471000,	0X11);
	MakeArray	(0X471011,	0X7EF);
	MakeByte	(0X471800);
	MakeArray	(0X471800,	0X16);
	MakeArray	(0X471816,	0X7EA);
	MakeRptCmt	(0X472000,	"AT.BIN");
	MakeByte	(0X472000);
	MakeArray	(0X472000,	0X2000);
	MakeByte	(0X474000);
	MakeArray	(0X474000,	0X6C1BC8);
	MakeArray	(0XB35BC8,	0X438);
	MakeByte	(0XB36000);
	MakeArray	(0XB36000,	0X6C1BC8);
	MakeArray	(0X11F7BC8,	0X438);
	MakeByte	(0X11F8000);
	MakeArray	(0X11F8000,	0X25B070);
	MakeArray	(0X1453070,	0X790);
	MakeByte	(0X1453800);
	MakeArray	(0X1453800,	0X25B070);
	MakeArray	(0X16AE870,	0X790);
	MakeByte	(0X16AF000);
	MakeArray	(0X16AF000,	0X1EBF18);
	MakeArray	(0X189AF18,	0XE8);
	MakeByte	(0X189B000);
	MakeArray	(0X189B000,	0X1EBF18);
	MakeArray	(0X1A86F18,	0XE8);
	MakeByte	(0X1A87000);
	MakeArray	(0X1A87000,	0X1EBF18);
	MakeArray	(0X1C72F18,	0XE8);
	MakeByte	(0X1C73000);
	MakeArray	(0X1C73000,	0X1EBF18);
	MakeArray	(0X1E5EF18,	0XE8);
	MakeByte	(0X1E5F000);
	MakeArray	(0X1E5F000,	0X10000);
	MakeByte	(0X1E6F000);
	MakeArray	(0X1E6F000,	0X10000);
	MakeByte	(0X1E7F000);
	MakeArray	(0X1E7F000,	0X30000);
	MakeByte	(0X1EAF000);
	MakeArray	(0X1EAF000,	0X30000);
	MakeByte	(0X1EDF000);
	MakeArray	(0X1EDF000,	0X20000);
	MakeByte	(0X1EFF000);
	MakeArray	(0X1EFF000,	0X30000);
	MakeByte	(0X1F2F000);
	MakeArray	(0X1F2F000,	0X30000);
	MakeByte	(0X1F5F000);
	MakeArray	(0X1F5F000,	0X30000);
	MakeByte	(0X1F8F000);
	MakeArray	(0X1F8F000,	0X30000);
	MakeByte	(0X1FBF000);
	MakeArray	(0X1FBF000,	0X6D000);
	MakeByte	(0X202C000);
	MakeArray	(0X202C000,	0X6D000);
	MakeByte	(0X2099000);
	MakeArray	(0X2099000,	0X6D000);
	MakeByte	(0X2106000);
	MakeArray	(0X2106000,	0X6D000);
	MakeByte	(0X2173000);
	MakeArray	(0X2173000,	0X6D000);
	MakeByte	(0X21E0000);
	MakeArray	(0X21E0000,	0X6D000);
	MakeByte	(0X224D000);
	MakeArray	(0X224D000,	0X6D000);
	MakeByte	(0X22BA000);
	MakeArray	(0X22BA000,	0X6D000);
	MakeByte	(0X2327000);
	MakeArray	(0X2327000,	0X6D000);
	MakeByte	(0X2394000);
	MakeArray	(0X2394000,	0X6D000);
	MakeByte	(0X2401000);
	MakeArray	(0X2401000,	0X6D000);
	MakeByte	(0X246E000);
	MakeArray	(0X246E000,	0X6D000);
	MakeByte	(0X24DB000);
	MakeArray	(0X24DB000,	0X6D000);
	MakeByte	(0X2548000);
	MakeArray	(0X2548000,	0X6D000);
	MakeByte	(0X25B5000);
	MakeArray	(0X25B5000,	0X6D000);
	MakeByte	(0X2622000);
	MakeArray	(0X2622000,	0X6D000);
	MakeByte	(0X268F000);
	MakeArray	(0X268F000,	0X6D000);
	MakeByte	(0X26FC000);
	MakeArray	(0X26FC000,	0X6D000);
	MakeByte	(0X2769000);
	MakeArray	(0X2769000,	0X6D000);
	MakeByte	(0X27D6000);
	MakeArray	(0X27D6000,	0X6D000);
	MakeByte	(0X2843000);
	MakeArray	(0X2843000,	0X6D000);
	MakeByte	(0X28B0000);
	MakeArray	(0X28B0000,	0X6D000);
	MakeByte	(0X291D000);
	MakeArray	(0X291D000,	0X6D000);
	MakeByte	(0X298A000);
	MakeArray	(0X298A000,	0X5);
	MakeArray	(0X298A005,	0X7FB);
	MakeByte	(0X298A800);
	MakeArray	(0X298A800,	0X5);
	MakeArray	(0X298A805,	0X7FB);
	MakeByte	(0X298B000);
	MakeArray	(0X298B000,	0X5);
	MakeArray	(0X298B005,	0X7FB);
	MakeByte	(0X298B800);
	MakeArray	(0X298B800,	0X5);
	MakeArray	(0X298B805,	0X7FB);
	MakeByte	(0X298C000);
	MakeArray	(0X298C000,	0X5);
	MakeArray	(0X298C005,	0X7FB);
	MakeByte	(0X298C800);
	MakeArray	(0X298C800,	0X5);
	MakeArray	(0X298C805,	0X7FB);
	MakeByte	(0X298D000);
	MakeArray	(0X298D000,	0X5);
	MakeArray	(0X298D005,	0X7FB);
	MakeByte	(0X298D800);
	MakeArray	(0X298D800,	0X5);
	MakeArray	(0X298D805,	0X7FB);
	MakeByte	(0X298E000);
	MakeArray	(0X298E000,	0X6D000);
	MakeByte	(0X29FB000);
	MakeArray	(0X29FB000,	0X6D000);
	MakeByte	(0X2A68000);
	MakeArray	(0X2A68000,	0X6D000);
	MakeByte	(0X2AD5000);
	MakeArray	(0X2AD5000,	0X6D000);
	MakeByte	(0X2B42000);
	MakeArray	(0X2B42000,	0X6D000);
	MakeByte	(0X2BAF000);
	MakeArray	(0X2BAF000,	0X6D000);
	MakeByte	(0X2C1C000);
	MakeArray	(0X2C1C000,	0X6D000);
	MakeByte	(0X2C89000);
	MakeArray	(0X2C89000,	0X6D000);
	MakeByte	(0X2CF6000);
	MakeArray	(0X2CF6000,	0X6D000);
	MakeByte	(0X2D63000);
	MakeArray	(0X2D63000,	0X6D000);
	MakeByte	(0X2DD0000);
	MakeArray	(0X2DD0000,	0X6D000);
	MakeByte	(0X2E3D000);
	MakeArray	(0X2E3D000,	0X6D000);
	MakeByte	(0X2EAA000);
	MakeArray	(0X2EAA000,	0X6D000);
	MakeByte	(0X2F17000);
	MakeArray	(0X2F17000,	0X6D000);
	MakeByte	(0X2F84000);
	MakeArray	(0X2F84000,	0X6D000);
	MakeByte	(0X2FF1000);
	MakeArray	(0X2FF1000,	0X6D000);
	MakeByte	(0X305E000);
	MakeArray	(0X305E000,	0X6D000);
	MakeByte	(0X30CB000);
	MakeArray	(0X30CB000,	0X6D000);
	MakeByte	(0X3138000);
	MakeArray	(0X3138000,	0X6D000);
	MakeByte	(0X31A5000);
	MakeArray	(0X31A5000,	0X6D000);
	MakeByte	(0X3212000);
	MakeArray	(0X3212000,	0X6D000);
	MakeByte	(0X327F000);
	MakeArray	(0X327F000,	0X6D000);
	MakeByte	(0X32EC000);
	MakeArray	(0X32EC000,	0X6D000);
	MakeByte	(0X3359000);
	MakeArray	(0X3359000,	0X6D000);
	MakeByte	(0X33C6000);
	MakeArray	(0X33C6000,	0X6D000);
	MakeByte	(0X3433000);
	MakeArray	(0X3433000,	0X50000);
	MakeByte	(0X3483000);
	MakeArray	(0X3483000,	0X30000);
	MakeByte	(0X34B3000);
	MakeArray	(0X34B3000,	0X30000);
	MakeByte	(0X34E3000);
	MakeArray	(0X34E3000,	0X5);
	MakeArray	(0X34E3005,	0X7FB);
	MakeByte	(0X34E3800);
	MakeArray	(0X34E3800,	0X5);
	MakeArray	(0X34E3805,	0X7FB);
	MakeByte	(0X34E4000);
	MakeArray	(0X34E4000,	0X5);
	MakeArray	(0X34E4005,	0X7FB);
	MakeByte	(0X34E4800);
	MakeArray	(0X34E4800,	0X5);
	MakeArray	(0X34E4805,	0X7FB);
	MakeByte	(0X34E5000);
	MakeArray	(0X34E5000,	0X6D000);
	MakeByte	(0X3552000);
	MakeArray	(0X3552000,	0X6D000);
	MakeByte	(0X35BF000);
	MakeArray	(0X35BF000,	0X6D000);
	MakeByte	(0X362C000);
	MakeArray	(0X362C000,	0X6D000);
	MakeByte	(0X3699000);
	MakeArray	(0X3699000,	0X6D000);
	MakeByte	(0X3706000);
	MakeArray	(0X3706000,	0X6D000);
	MakeByte	(0X3773000);
	MakeArray	(0X3773000,	0X6D000);
	MakeByte	(0X37E0000);
	MakeArray	(0X37E0000,	0X6D000);
	MakeByte	(0X384D000);
	MakeArray	(0X384D000,	0X6D000);
	MakeByte	(0X38BA000);
	MakeArray	(0X38BA000,	0X6000);
	MakeByte	(0X38C0000);
	MakeArray	(0X38C0000,	0X40000);
	MakeByte	(0X3900000);
	MakeArray	(0X3900000,	0X40000);
	MakeByte	(0X3940000);
	MakeArray	(0X3940000,	0X8000);
	MakeByte	(0X3948000);
	MakeArray	(0X3948000,	0X4000);
	MakeByte	(0X394C000);
	MakeArray	(0X394C000,	0X2000);
	MakeByte	(0X394E000);
	MakeArray	(0X394E000,	0X1000);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
}

// End of file.
